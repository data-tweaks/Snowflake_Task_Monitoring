
create database if not exists taskMonitoring; 
use database taskMonitoring; 
create  schema if not exists core;
use schema core;
create or replace TABLE TASK_RUN_HISTORY (
	ROOT_TASK_NAME VARCHAR(180),
	ROOT_TASK_ATTEMPT_NUMBER NUMBER(38,0),
	ROOT_TASK_STATE VARCHAR(12),
	TASK_NAME VARCHAR(180),
	CONDITION_TEXT VARCHAR(180),
	ROOT_TASK_SCHEDULED_FROM VARCHAR(15),
	TASK_SCHEDULED_FROM VARCHAR(15),
	TASK_SCHEDULED_TIME VARCHAR(60),
	TASK_START_TIME VARCHAR(60),
	TASK_COMPLETED_TIME VARCHAR(60),
	TASK_QUERY_START_TIME VARCHAR(60),
	TASK_QUERY_END_TIME VARCHAR(60),
	TASK_HISTORY_STATE VARCHAR(25),
	TASK_ERROR_CODE VARCHAR(60),
	TASK_ERROR_MESSAGE VARCHAR(180),
	DATABASE_NAME VARCHAR(80),
	QUERY_TYPE VARCHAR(120),
	TASK_QUERY_EXECUTION_STATUS VARCHAR(80),
	USER_NAME VARCHAR(160),
	ROLE_NAME VARCHAR(160),
	WAREHOUSE_NAME VARCHAR(150),
	WAREHOUSE_SIZE VARCHAR(50),
	TOTAL_ELAPSED_TIME NUMBER(38,3),
	COMPILATION_TIME NUMBER(38,3),
	EXECUTION_TIME NUMBER(38,3),
	EXECUTION_WAREHOUSE_TIME NUMBER(38,3),
	QUEUED_PROVISIONING_TIME NUMBER(38,0),
	QUEUED_OVERLOAD_TIME NUMBER(38,3),
	TRANSACTION_BLOCKED_TIME NUMBER(38,3),
	QUERY_LOAD_PERCENT NUMBER(38,2),
	BYTES_SCANNED NUMBER(38,0),
	PERCENTAGE_SCANNED_FROM_CACHE FLOAT,
	BYTES_WRITTEN NUMBER(38,0),
	ROWS_PRODUCED NUMBER(38,0),
	PARTITIONS_SCANNED NUMBER(38,0),
	PARTITIONS_TOTAL NUMBER(38,0),
	BYTES_SPILLED_TO_LOCAL_STORAGE NUMBER(38,0),
	BYTES_SPILLED_TO_REMOTE_STORAGE NUMBER(38,0),
	BYTES_SENT_OVER_THE_NETWORK NUMBER(38,0),
	QUERY_ACCELERATION_BYTES_SCANNED NUMBER(38,0),
	QUERY_ACCELERATION_PARTITIONS_SCANNED NUMBER(38,0),
	QUERY_RETRY_TIME NUMBER(38,0),
	QUERY_RETRY_CAUSE VARCHAR(150),
	QUERY_ID VARCHAR(100)
);
create or replace TABLE TASK_STATISTICS_TOP5 (
	CATEGORY VARCHAR(60),
	ROOT_TASK_NAME VARCHAR(250),
	TASK_NAME VARCHAR(250),
	ROOT_TASK_SCHEDULED_FROM VARCHAR(60),
	TASK_STATE VARCHAR(60),
	TASK_RUN_DT DATE,
	QUERY_TYPE VARCHAR(60),
	COMPILATION_TIME_IN_SEC NUMBER(10,3),
	EXECUTION_TIME_IN_SEC NUMBER(10,3),
	TOTAL_TIME_IN_SEC NUMBER(10,3),
	QUERY_ID VARCHAR(60)
);
create or replace TABLE TASK_STORAGE_SCAN_PERF_TOP5 (
	CATEGORY VARCHAR(30),
	QUERY_TYPE VARCHAR(80),
	ROOT_TASK VARCHAR(180),
	TASK VARCHAR(180),
	TRIGGERED_AS VARCHAR(50),
	EXECUTION_DT DATE,
	STATUS VARCHAR(30),
	PERFORMANCE_INDICATOR NUMBER(20,2),
	IS_BYTES_SPILLED NUMBER(38,0)
);
create or replace TABLE TASK_WH_USAGE_PARAMETRIZED (
	PARAMETER VARCHAR(60),
	PERIOD_DT VARCHAR(50),
	WAREHOUSE_NAME VARCHAR(80),
	DATABASE_NAME VARCHAR(50),
	TASK_NAME VARCHAR(180),
	CREDITS_USED NUMBER(38,6)
);
create or replace TABLE TASKS_FOR_HEALTH_CHECK (
	TASK_NAME VARCHAR(180),
	TASK_SCHEDULED_FROM VARCHAR(40),
	WAREHOUSE_NAME VARCHAR(180),
	DATABASE_NAME VARCHAR(80),
	TOTAL_ELAPSED_TIME NUMBER(38,0),
	QUERY_ID VARCHAR(80)
);
create or replace TABLE WAREHOUSE_UTILIZATION_MONTHLY (
	WAREHOUSE_NAME VARCHAR(180),
	TOTAL_HOURS NUMBER(38,0),
	TOTAL_IDLE_HOURS NUMBER(38,0)
);
create or replace TABLE QUERY_STATS (
	OPERATOR_TYPE VARCHAR(120),
	TOTAL_TIME NUMBER(38,5),
	INIT_TIME NUMBER(38,5),
	NETWORK_TIME NUMBER(38,5),
	REMOTE_DISK_IO_TIME NUMBER(38,5),
	PROCESSING_TIME NUMBER(38,5),
	LOCAL_DISK_IO_TIME NUMBER(38,5),
	TABLENAME VARCHAR(16777216),
	FUNCTIONS VARCHAR(16777216),
	GROUPINGKEYSET VARCHAR(16777216),
	GROUPKEYS VARCHAR(16777216),
	FILTERCONDITION VARCHAR(16777216),
	INPUT VARCHAR(16777216),
	JOIN_TYPE VARCHAR(16777216),
	ADDITIONAL_JOINCONDITION VARCHAR(16777216),
	JOINCONDITION VARCHAR(16777216),
	SORTKEYS VARCHAR(16777216),
	STAGENAME VARCHAR(16777216),
	STAGETYPE VARCHAR(16777216),
	TABLESCANCOLUMNS VARCHAR(16777216),
	QUERY_ID VARCHAR(16777216)
);
create or replace TABLE TASK_STATE (
	CREATED_ON VARCHAR(100),
	DATABASE_NAME VARCHAR(100),
	SCHEMA_NAME VARCHAR(100),
	NAME VARCHAR(150),
	ID VARCHAR(80),
	STATE VARCHAR(50),
	ERROR_INTEGRATION VARCHAR(150),
	SCHEDULE VARCHAR(80),
	OWNER VARCHAR(80),
	LAST_SUSPENDED_ON VARCHAR(100),
	LAST_SUSPENDED_REASON VARCHAR(160)
);
create or replace TABLE TASKS_MISSED_EXECUTIONS (
	TASK_NAME VARCHAR(260),
	SCHEDULED_TIME TIMESTAMP_LTZ(3),
	STATE VARCHAR(12),
	NEXT_SCHEDULED_TIME TIMESTAMP_LTZ(3)
);
